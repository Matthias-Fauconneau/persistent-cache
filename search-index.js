var searchIndex = {};
searchIndex["persistentcache"] = {"doc":"Macros for persistently caching function calls","items":[[0,"persistentcache","persistentcache","Implementation of the macros `cache!` and `cache_func!`.",null,null],[0,"storage","","Implementation of different persistent storages. Currently on disk (`FileStorage` and `FileMemoryStorage`) and in Redis (`RedisStorage`).",null,null],[0,"file","persistentcache::storage","`FileStorage` # FileStorage",null,null],[3,"FileStorage","persistentcache::storage::file","`FileStorage` struct",null,null],[11,"new","","Creates the `path` directory and returns a `FileStorage` struct.",0,{"i":[{"n":"str"}],"o":{"g":["error"],"n":"result"}}],[11,"get","","Returns the value corresponding to the variable `name`.",0,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["vec","error"],"n":"result"}}],[11,"set","","Writes the data of type `&[u8]` in array `val` to the file corresponding to the variable `name`.",0,null],[11,"flush","","Delete all variables stored in `path` (see `new()`) which start with `PREFIX_`.",0,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"result"}}],[0,"file_memory","persistentcache::storage","`FileMemoryStorage` # FileMemoryStorage",null,null],[3,"FileMemoryStorage","persistentcache::storage::file_memory","`FileMemoryStorage` struct",null,null],[11,"new","","Creates the `path` directory and returns a `FileMemoryStorage` struct.",1,{"i":[{"n":"str"}],"o":{"g":["error"],"n":"result"}}],[11,"get","","Returns the value corresponding to the variable `name`. If it is stored in the hash map, it will retreive it from there, otherwise it will retreive it from the file system.",1,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["vec","error"],"n":"result"}}],[11,"set","","Writes the data of type `&[u8]` in array `val` to the file corresponding to the variable `name`.",1,null],[11,"flush","","Delete all variables stored in `path` (see `new()`) which start with `PREFIX_`.",1,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"result"}}],[0,"redis","persistentcache::storage","`RedisStorage` # RedisStorage",null,null],[3,"RedisStorage","persistentcache::storage::redis","`RedisStorage` struct holds a `redis::Connection` variable.",null,null],[11,"new","","Connects to the Redis server listening at `host` and constructs a new `RedisStorage` struct.",2,{"i":[{"n":"str"}],"o":{"g":["error"],"n":"result"}}],[11,"get","","Returns the value within the Redis variable `name`.",2,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["vec","error"],"n":"result"}}],[11,"set","","Sets the Redis variable `name` to the array `val` of type `&[u8]`.",2,null],[11,"flush","","Delete all variables stored in the Redis database which start with `PREFIX_`.",2,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"result"}}],[17,"PREFIX","persistentcache","Every stored variable is prefixed by this string. Currently, the flush functions depend on this in order to decide which variable to flush from the storage. Keeping track of the used variable internally is not an option because they are persistent and may come from another process.",null,null],[8,"PersistentCache","","Traits which need to be implemented by any storage",null,null],[10,"get","","Return serialized value of variable",3,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["vec","error"],"n":"result"}}],[10,"set","","Set serialized value of variable",3,null],[10,"flush","","Flush storage",3,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"result"}}],[14,"cache_func","","Cache an entire function.",null,null],[14,"cache","","Cache a single function call.",null,null]],"paths":[[3,"FileStorage"],[3,"FileMemoryStorage"],[3,"RedisStorage"],[8,"PersistentCache"]]};
searchIndex["persistentcache_procmacro"] = {"doc":"Procedural macro to persistently cache functions.","items":[[5,"persistent_cache","persistentcache_procmacro","",null,{"i":[{"n":"tokenstream"},{"n":"tokenstream"}],"o":{"n":"tokenstream"}}]],"paths":[]};
initSearch(searchIndex);
